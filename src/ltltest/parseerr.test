#! /bin/sh

# Check error recovery in parsing.  This also check how the
# resulting tree looks like.

. ./defs || exit 1

check()
{
  if ./ltl2text "$1" >stdout; then
    echo "ltl2text unexpectedly parsed '$1' successfully"
    rm -f stdout
    exit 1
  else
    if test -n "$2"; then
      echo "$2" >expect
    else
      : >expect
    fi
    if cmp stdout expect; then
      :
    else
      echo "'$1' parsed as"
      cat stdout
      echo "instead of"
      cat expect
      rm -f stdout expect
      exit 1
    fi
  fi
}

# Empty or unparsable strings
check '' ''
check '+' ''
check 'a U' ''
check 'a U b V c R' ''

# leading and trailing garbage are skipped
check '/2/3/4/5 a + b /6/7/8/' 'multop(Or, AP(a), AP(b))'
check 'a U b c' 'binop(U, AP(a), AP(b))'
# (check multop merging while we are at it)
check 'a & b & c & d e' 'multop(And, AP(a), AP(b), AP(c), AP(d))'
check 'a & (b | c) & d should work' 'multop(And, AP(a), multop(Or, AP(b), AP(c)), AP(d))'

# Recovery inside parentheses
check 'a U (b c) U e R (f g <=> h)' \
      'binop(R, binop(U, binop(U, AP(a), AP(b)), AP(e)), AP(f))'
check 'a U ((c) U e) R (<=> f g)' \
      'binop(R, binop(U, AP(a), binop(U, AP(c), AP(e))), constant(0))'
