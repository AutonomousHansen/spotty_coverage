#!/bin/sh
# Copyright (C) 2003, 2004  Laboratoire d'Informatique de Paris 6 (LIP6),
# département Systèmes Répartis Coopératifs (SRC), Université Pierre
# et Marie Curie.
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Spot; see the file COPYING.  If not, write to the Free
# Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.


. ./defs

set -e

expect_ce_do()
{
  run 0 ./ltl2tgba "$@"
  run 0 ./ltl2tgba -g "$@"
}

expect_ce()
{
  expect_ce_do -e "$1"
  expect_ce_do -e -D "$1"
  expect_ce_do -e -f "$1"
  expect_ce_do -e -f -D "$1"
  expect_ce_do -ecouvreur99_shy "$1"
  expect_ce_do -ecouvreur99_shy -D "$1"
  expect_ce_do -ecouvreur99_shy -f "$1"
  expect_ce_do -ecouvreur99_shy -f -D "$1"
  expect_ce_do -emagic_search "$1"
  expect_ce_do -emagic_search -f "$1"
}

expect_no()
{
  run 0 ./ltl2tgba -E "$1"
  run 0 ./ltl2tgba -E -D "$1"
  run 0 ./ltl2tgba -E -f "$1"
  run 0 ./ltl2tgba -E -f -D "$1"
  run 0 ./ltl2tgba -Ecouvreur99_shy "$1"
  run 0 ./ltl2tgba -Ecouvreur99_shy -D "$1"
  run 0 ./ltl2tgba -Ecouvreur99_shy -f "$1"
  run 0 ./ltl2tgba -Ecouvreur99_shy -f -D "$1"
  run 0 ./ltl2tgba -Emagic_search "$1"
  run 0 ./ltl2tgba -Emagic_search -f "$1"
}

expect_ce 'a'
expect_ce 'a U b'
expect_ce 'X a'
expect_ce 'a & b & c'
expect_ce 'a | b | (c U (d & (g U (h ^ i))))'
expect_ce 'Xa & (b U !a) & (b U !a)'
expect_ce 'Fa & Xb & GFc & Gd'
expect_ce 'Fa & Xa & GFc & Gc'
expect_ce 'Fc & X(a | Xb) & GF(a | Xb) & Gc'
expect_ce '!((FF a) <=> (F x))'
expect_no '!((FF a) <=> (F a))'
expect_no 'Xa && (!a U b) && !b && X!b'
expect_no '(a U !b) && Gb'

# Expect at least four accepting runs
test `./ltl2tgba -emagic_search_repeated 'FFx <=> Fx' |
      grep Prefix: | wc -l` -ge 4
