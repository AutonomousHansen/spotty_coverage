// -*- coding: utf-8 -*-
// Copyright (C) 2018 Laboratoire de Recherche et
// Developpement de l'Epita
//
// This file is part of Spot, a model checking library.
//
// Spot is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// Spot is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
// License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#pragma once

#include <spot/misc/common.hh>
#include <sstream>

// Ignore all errors generated by the compiler when including the mpi library
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wsuggest-override"
#pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
#include <mpi.h>
#pragma GCC diagnostic pop

namespace spot
{
class SPOT_API process
{
 public:
  process(int);
  ~process(void);

  int get_rank(void);
  char* get_host_name(void);

  // uses string streams to synchronize inputs and outputs between processes
  std::stringstream out;
  std::stringstream err;

 private:
  int rank = 0;
  int thread_level_support = MPI_THREAD_SINGLE;
  char host_name[MPI_MAX_PROCESSOR_NAME];
};
}  // namespace spot