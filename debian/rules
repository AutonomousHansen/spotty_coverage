#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
DH_VERBOSE = 1

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk

# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed


# main packaging script based on dh7 syntax
%:
	dh $@ --parallel --with=python3

LTOPLUG = /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so

# ARFLAGS is for Automake
# AR_FLAGS is for Libtool
LTOSETUP =					\
  LDFLAGS='-fuse-linker-plugin'			\
  NM='nm --plugin $(LTOPLUG)'			\
  ARFLAGS='cru --plugin $(LTOPLUG)'		\
  AR_FLAGS='cru --plugin $(LTOPLUG)'		\
  RANLIB='ranlib --plugin $(LTOPLUG)'
PRO1SETUP =					\
  CFLAGS='-flto -fprofile-generate'		\
  CXXFLAGS='-flto -fprofile-generate'
PRO2SETUP =					\
  CFLAGS='-flto -fprofile-use'			\
  CXXFLAGS='-flto -fprofile-use'
PYSETUP = PYTHON=/usr/bin/python3

# We want to build Spot twice: once to get profile data, and a second
# time to use it.
override_dh_auto_configure:
	dh_auto_configure -- $(PRO1SETUP) $(LTOSETUP)	\
	  --disable-devel --enable-optimizations	\
	  --disable-static $(PYSETUP)
	dh_auto_build
	dh_auto_test
	make clean
	dh_auto_configure -- $(PRO2SETUP) $(LTOSETUP)	\
	  --disable-devel --enable-optimizations	\
	  --disable-static $(PYSETUP)
override_dh_auto_install:
	dh_auto_install --destdir=$(CURDIR)/debian/tmp
	find debian/tmp -name '*.la' -exec rm -rv {} ';'
override_dh_python3:
	dh_python3 -p python3-spot
