#!/bin/sh
# -*- coding: utf-8 -*-
# Copyright (C) 2016 Laboratoire de Recherche et DÃ©veloppement
# de l'Epita (LRDE).
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. ./defs

# The --accept-word option filters automata that accept the given word
# If several words are given, it filters automata that accept ALL words
ltl2tgba 'G!a' | autfilt --accept-word 'b; cycle{!a}' -q
ltl2tgba 'a U b' | autfilt --accept-word 'a; a; cycle{b}' -q
ltl2tgba 'F(!a&b)' |
    autfilt --accept-word 'b; cycle{b; !a&b}' --accept-word 'cycle{b}' -q
ltl2tgba -f 'a U b' |
    autfilt --accept-word='cycle{!a}' --accept-word='a;cycle{b}' -q

ltl2tgba -f 'a U b' | autfilt --accept-word='cycle{!b}' -q && exit 1

# An example from the documentation:
randltl -n -1 a b | ltlfilt --simplify --uniq | ltl2tgba -F- |
  autfilt --accept-word='a&!b;cycle{!a&!b}' --accept-word='!a&!b;cycle{a&b}' \
          --reject-word='cycle{b}' --stats=%M -n 3 > out
cat >expect <<EOF
F!b
!b
F(!a & !b)
EOF
diff out expect

# The same, without using automata explicitly
randltl -n -1 a b | ltlfilt --simplify --uniq \
  --accept-word='a&!b;cycle{!a&!b}' --accept-word='!a&!b;cycle{a&b}' \
  --reject-word='cycle{b}' -n 3 > out
diff out expect

# Test syntax errors
autfilt --reject='foobar' </dev/null 2>error && exit 1
autfilt --accept='cycle{foo' </dev/null 2>>error && exit 1
cat error
cat >expect <<EOF
autfilt: failed to parse the argument of --reject-word:
>>> foobar
          ^
A twa_word must contain a cycle

autfilt: failed to parse the argument of --accept-word:
>>> cycle{foo
             ^
Missing ';' or '}' after formula

EOF
diff expect error
